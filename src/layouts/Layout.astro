---
const { title, description, image, type } = Astro.props

const imageurl = new URL(image, Astro.site)
const url = new URL(Astro.url.pathname, Astro.site)

import Header from '../components/header.astro'
import Footer from '../components/footer.astro'
import { ViewTransitions } from 'astro:transitions'

import '../styles/globals.css'
---

<!doctype html>
<html lang="es" transition:animate="none">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <title>{title}</title>
    <meta name="description" content={description} />

    <link
      rel="alternate"
      type="application/rss+xml"
      title="Fran Moreno Blog"
      href={`${Astro.site}rss.xml`}
    />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={url} />
    {
      type && type === 'blog' && (
        <>
          <meta property="og:type" content="article" />
          <meta property="og:image" content={imageurl} />
          <meta name="twitter:image" content={imageurl} />
          <meta name="twitter:card" content="summary_large_image" />
          <meta property="twitter:domain" content="franmoreno.com" />
        </>
      )
    }
    <meta name="twitter:site" content="@siner" />
    <meta name="twitter:creator" content="@siner" />
    <script
      defer
      src="https://cloud.umami.is/script.js"
      data-website-id="7568ef52-58f6-4b53-a7a2-9c6708c6df6c"></script>
    <ViewTransitions />
  </head>
  <body
    class="min-h-screen bg-gradient-to-b from-white to-gray-50 dark:from-[#333333] dark:to-[#222222] dark:text-[#f5f5f5] transition-colors duration-300"
  >
    <div class="relative">
      <div
        class="absolute inset-0 bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] dark:bg-[radial-gradient(#444444_1px,transparent_1px)] [background-size:16px_16px] -z-10 opacity-50"
      >
      </div>
      <Header />
      <main
        class="container mx-auto p-4 min-h-[calc(100vh-200px)]"
        transition:animate="fade"
      >
        <slot />
      </main>
      <Footer />
    </div>
    <script is:inline>
      const theme = (() => {
        if (
          typeof localStorage !== 'undefined' &&
          localStorage.getItem('theme')
        ) {
          return localStorage.getItem('theme')
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark'
        }
        return 'light'
      })()

      if (theme === 'light') {
        document.documentElement.classList.remove('dark')
      } else {
        document.documentElement.classList.add('dark')
      }
      window.localStorage.setItem('theme', theme)
    </script>
  </body>
</html>
